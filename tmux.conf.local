# workaround for neovim and system clipboard integration
set -g default-shell $SHELL 
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# remove delay after ESC key
set -sg escape-time 0
# remove delay after prefix+command
set-option -g repeat-time 0

# Status Bar
# set -g status-bg default
set -g status-style bg=default
set -g status-fg '#707070'
set -g status-justify centre

# Adjust geometries
set -g status-left-length 10
set -g status-right-length 10

# Highlighting the active window in status bar
setw -g window-status-current-style bg=default,fg=white
# setw -g window-status-current-fg white
setw -g window-status-style bg=default,fg=default
# setw -g window-status-fg default
setw -g window-status-activity-style bg=default,fg=magenta,blink
# setw -g window-status-activity-bg default
# setw -g window-status-activity-fg red
setw -g window-status-bell-style bg=default,fg=red,blink
# setw -g window-status-bell-bg default
# setw -g window-status-bell-fg red
setw -g window-status-format ' ● '
setw -g window-status-current-format '#[fg=bold] ● '

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off

setw -g window-status-bell-style blink,dim
# setw -g window-status-activity-style blink,dim
# setw -g window-status-content-attr blink,dim

# Reload the .tmux.conf file with Ctrl-r
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# border colors
set -g pane-border-style fg=white
set -g pane-active-border-style fg=default

# disable mouse
# set-option -g default-command "reattach-to-user-namespace -l zsh"
# set-option -g mouse-select-pane off
# set-option -g mouse-select-window off
# set-window-option -g mode-mouse off

# using commands in a nested tmux window
bind-key a send-prefix

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"


# select-pane (@george-b)
bind-key 0 run "tmux split-window -p 40 'zsh -ci ftpane'"
